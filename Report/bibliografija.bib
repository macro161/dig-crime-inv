@book{lamport2002specifying,
  title={Specifying systems},
  author={Lamport, Leslie},
  volume={388},
  year={2002},
  publisher={Addison-Wesley Boston}
}

@misc{kfkTla,
    author={Jason Gustafson},
    title={Hardening Kafka Replication},
    howpublished={\url{https://kafka-summit.org/sessions/hardening-kafka-replication}},
    year={2004}, 
    note={Pristatymas konferencijoje},
}

@article{newcombe2014use,
  title={Use of formal methods at Amazon Web Services},
  author={Newcombe, Chris and Rath, Tim and Zhang, Fan and Munteanu, Bogdan and Brooker, Marc and Deardeuff, Michael},
  url={http://research. microsoft.com/en-us/um/people/lamport/tla/formal-methods-amazon.pdf},
  year={2014}
}

@misc{kfkBug,
    author={Eric Ward},
    title={Kafka Controller doesn't failover during hardware failure},
    howpublished={\url{https://issues.apache.org/jira/browse/KAFKA-9957}},
    year={2020}, 
    note={Kafka problemų sistemoje paskelbtas sistemos sutrikimas},
}

@article{10.14778/2824032.2824063,
author = {Wang, Guozhang and Koshy, Joel and Subramanian, Sriram and Paramasivam, Kartik and Zadeh, Mammad and Narkhede, Neha and Rao, Jun and Kreps, Jay and Stein, Joe},
title = {Building a Replicated Logging System with Apache Kafka},
year = {2015},
issue_date = {August 2015},
publisher = {VLDB Endowment},
volume = {8},
number = {12},
issn = {2150-8097},
url = {https://doi.org/10.14778/2824032.2824063},
doi = {10.14778/2824032.2824063},
abstract = {Apache Kafka is a scalable publish-subscribe messaging system with its core architecture as a distributed commit log. It was originally built at LinkedIn as its centralized event pipelining platform for online data integration tasks. Over the past years developing and operating Kafka, we extend its log-structured architecture as a replicated logging backbone for much wider application scopes in the distributed environment. In this abstract, we will talk about our design and engineering experience to replicate Kafka logs for various distributed data-driven systems at LinkedIn, including source-of-truth data storage and stream processing.},
journal = {Proc. VLDB Endow.},
month = aug,
pages = {1654–1655},
numpages = {2}
}

@article{jiryu2020extreme,
  title={eXtreme Modelling in Practice},
  author={Jiryu Davis, A Jesse and Hirschhorn, Max and Schvimer, Judah},
  journal={arXiv e-prints},
  pages={arXiv--2006},
  year={2020}
}

@misc{mcr,
  author={Tom Smith},
  title={New Research Shows 63\% of Enterprises Are Adopting Microservices Architectures},
  url={https://www.globenewswire.com/news-release/2018/09/20/1573625/0/en/New-Research-Shows-63-Percent-of-Enterprises-Are-Adopting-Microservices-Architectures-Yet-50-Percent-Are-Unaware-of-the-Impact-on-Revenue-Generating-Business-Processes.html},
  year={2018}
}

@article{bucchiarone2018monolithic,
  title={From monolithic to microservices: An experience report from the banking domain},
  author={Bucchiarone, Antonio and Dragoni, Nicola and Dustdar, Schahram and Larsen, Stephan T and Mazzara, Manuel},
  journal={Ieee Software},
  volume={35},
  number={3},
  pages={50--55},
  year={2018},
  publisher={IEEE}
}

@misc{kfk,
  title={Apache Kafka},
  url={https://kafka.apache.org/},
  year={2020}
}

@misc{kfkGH,
  title={Apache Kafka Mirror Tests},
  url={https://github.com/confluentinc/kafka/tree/master/tests},
  year={2020}}

@article{819971,
  author={J. A. {Whittaker}},
  journal={IEEE Software}, 
  title={What is software testing? And why is it so hard?}, 
  year={2000},
  volume={17},
  number={1},
  pages={70-79},
  doi={10.1109/52.819971}}

@inproceedings{sullivan2004software,
  title={Software assurance by bounded exhaustive testing},
  author={Sullivan, Kevin and Yang, Jinlin and Coppit, David and Khurshid, Sarfraz and Jackson, Daniel},
  booktitle={Proceedings of the 2004 ACM SIGSOFT international symposium on Software testing and analysis},
  pages={133--142},
  year={2004}
}

@incollection{holzmann1995improvement,
  title={An improvement in formal verification},
  author={Holzmann, Gerard J and Peled, Doron},
  booktitle={Formal Description Techniques VII},
  pages={197--211},
  year={1995},
  publisher={Springer}
}

@inproceedings{yu1999model,
  title={Model checking TLA+ specifications},
  author={Yu, Yuan and Manolios, Panagiotis and Lamport, Leslie},
  booktitle={Advanced Research Working Conference on Correct Hardware Design and Verification Methods},
  pages={54--66},
  year={1999},
  organization={Springer}
}

@article{10.1145/177492.177726,
author = {Lamport, Leslie},
title = {The Temporal Logic of Actions},
year = {1994},
issue_date = {May 1994},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {16},
number = {3},
issn = {0164-0925},
url = {https://doi.org/10.1145/177492.177726},
doi = {10.1145/177492.177726},
abstract = {The temporal logic of actions (TLA) is a logic for specifying and reasoning about concurrent systems. Systems and their properties are represented in the same logic, so the assertion that a system meets its specification and the assertion that one system implements another are both expressed by logical implication. TLA is very simple; its syntax and complete formal semantics are summarized in about a page. Yet, TLA is not just a logician's toy; it is extremely powerful, both in principle and in practice. This report introduces TLA and describes how it is used to specify and verify concurrent algorithms. The use of TLA to specify and reason about open systems will be described elsewhere.},
journal = {ACM Trans. Program. Lang. Syst.},
month = may,
pages = {872–923},
numpages = {52},
keywords = {liveness properties, safety properties, concurrent programming}
}

@inproceedings{4567924,
  author={A. {Pnueli}},
  booktitle={18th Annual Symposium on Foundations of Computer Science (sfcs 1977)}, 
  title={The temporal logic of programs}, 
  year={1977},
  volume={},
  number={},
  pages={46-57},
  doi={10.1109/SFCS.1977.32}}

@misc{kfkissue,
  title={Kafka - - ASF JIRA},
  year={2020},
  url={https://issues.apache.org/jira/projects/KAFKA/issues/KAFKA-10635?filter=allopenissues}}

@book{hohpe2004enterprise,
  title={Enterprise integration patterns: Designing, building, and deploying messaging solutions},
  author={Hohpe, Gregor and Woolf, Bobby},
  year={2004},
  publisher={Addison-Wesley Professional}
}

@article{lamport2005generalized,
  title={Generalized consensus and Paxos},
  author={Lamport, Leslie},
  year={2005},
  publisher={Technical Report MSR-TR-2005-33, Microsoft Research}
}

@misc{ltx,
  title={Latex is cool},
  url={https://kafka.apache.org/},
  year={2020}
}

@misc{howard2011modelbased,
      title={Model-Based Trace-Checking}, 
      author={Y. Howard and S. Gruner and A. Gravell and C. Ferreira and J. C. Augusto},
      year={2011},
      eprint={1111.2825},
      archivePrefix={arXiv},
      primaryClass={cs.LO}
}

@book{coulouris2005distributed,
  title={Distributed systems: concepts and design},
  author={Coulouris, George F and Dollimore, Jean and Kindberg, Tim},
  year={2005},
  publisher={pearson education}
}

@misc{shirriff2006method,
  title={Method and system for establishing a quorum for a geographically distributed cluster of computers},
  author={Shirriff, Kenneth W},
  year={2006},
  month=mar # "~21",
  publisher={Google Patents},
  note={US Patent 7,016,946}
}

@inproceedings {180327,
author = {Trinabh Gupta and Joshua B. Leners and Marcos K. Aguilera and Michael Walfish},
title = {Improving Availability in Distributed Systems with Failure Informers},
booktitle = {10th {USENIX} Symposium on Networked Systems Design and Implementation ({NSDI} 13)},
year = {2013},
isbn = {978-1-931971-00-3},
address = {Lombard, IL},
pages = {427--441},
url = {https://www.usenix.org/conference/nsdi13/technical-sessions/presentation/leners},
publisher = {{USENIX} Association},
month = apr,
}

@INPROCEEDINGS{5470366,
  author={S. {Ramabhadran} and J. {Pasquale}},
  booktitle={2010 IEEE International Symposium on Parallel   Distributed Processing (IPDPS)}, 
  title={Analysis of durability in replicated distributed storage systems}, 
  year={2010},
  volume={},
  number={},
  pages={1-12},
  doi={10.1109/IPDPS.2010.5470366}}

@ARTICLE{862209,
  author={P. {Jogalekar} and M. {Woodside}},
  journal={IEEE Transactions on Parallel and Distributed Systems}, 
  title={Evaluating the scalability of distributed systems}, 
  year={2000},
  volume={11},
  number={6},
  pages={589-603},
  doi={10.1109/71.862209}}

@article{lamport2019safety,
  title={Safety, Liveness, and Fairness},
  author={Lamport, Leslie},
  year={2019}
}

@inproceedings{yu1999model,
  title={Model checking TLA+ specifications},
  author={Yu, Yuan and Manolios, Panagiotis and Lamport, Leslie},
  booktitle={Advanced Research Working Conference on Correct Hardware Design and Verification Methods},
  pages={54--66},
  year={1999},
  organization={Springer}
}

@inproceedings{cousineau2012tla+,
  title={TLA+ proofs},
  author={Cousineau, Denis and Doligez, Damien and Lamport, Leslie and Merz, Stephan and Ricketts, Daniel and Vanzetto, Hern{\'a}n},
  booktitle={International Symposium on Formal Methods},
  pages={147--154},
  year={2012},
  organization={Springer}
}

@article{10.1145/2723872.2723876,
author = {Howard, Heidi and Schwarzkopf, Malte and Madhavapeddy, Anil and Crowcroft, Jon},
title = {Raft Refloated: Do We Have Consensus?},
year = {2015},
issue_date = {January 2015},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {49},
number = {1},
issn = {0163-5980},
url = {https://doi.org/10.1145/2723872.2723876},
doi = {10.1145/2723872.2723876},
abstract = {The Paxos algorithm is famously difficult to reason about and even more so to implement, despite having been synonymous with distributed consensus for over a decade. The recently proposed Raft protocol lays claim to being a new, understandable consensus algorithm, improving on Paxos without making compromises in performance or correctness.In this study, we repeat the Raft authors' performance analysis. We developed a clean-slate implementation of the Raft protocol and built an event-driven simulation framework for prototyping it on experimental topologies. We propose several optimizations to the Raft protocol and demonstrate their effectiveness under contention. Finally, we empirically validate the correctness of the Raft protocol invariants and evaluate Raft's understandability claims.},
journal = {SIGOPS Oper. Syst. Rev.},
month = jan,
pages = {12–21},
numpages = {10}
}

@misc{raftimpl,
  title={A Raft Protocol for the Metadata Quorum},
  url={https://cwiki.apache.org/confluence/display/KAFKA/KIP-595\%3A+A+Raft+Protocol+for+the+Metadata+Quorum},
  year={2020}
}

@misc{rafttla,
  title={Raft formal specification with TLA+},
  url={https://github.com/ongardie/raft.tla/blob/master/raft.tla},
  year={2018}
}

@misc{kfkis,
   title={Kafka sutrikimų registravimo sistema},
   url={https://issues.apache.org/jira/projects/KAFKA},
   year={2020}
}

@misc{kfkistwo,
   title={Lengtyvių sąlygos sutrikimas FindCoordinatorFuture klasėje},
   url={https://issues.apache.org/jira/browse/KAFKA-10793},
   year={2020}
}

@misc{extest,
   title={TLA+ Transmutation},
   url={https://github.com/bugarela/tla-transmutation},
   year={2023}
}

@misc{kfkisthr,
   title={Lengtyvių sąlyga gali sukelti atsilikimą kitoms aktyvioms užduotims},
   url={https://issues.apache.org/jira/browse/KAFKA-9846},
   year={2020}
}

@misc{tlagen,
   title={Elixir → TLA+ Converter},
   url={https://github.com/DeividasBrazenas/tla-generator},
   year={2023}
}

@misc{expop,
   title={Cases},
   url={https://elixir-lang.org/cases.html},
   year={2023}
}

@Inbook{O’Regan2017,
author="O'Regan, Gerard",
title="Z Formal Specification Language",
bookTitle="Concise Guide to Formal Methods: Theory, Fundamentals and Industry Applications",
year="2017",
publisher="Springer International Publishing",
address="Cham",
pages="155--171",
abstract="This chapter presents the Z specification language, which is one of the most widely used formal methods. Z is a formal specification language based on Zermelo set theory. It was developed at the Programming Research Group at Oxford University in the early 1980s. Z specifications are mathematical and employ a classical two-valued logic. The use of mathematics ensures precision and allows inconsistencies and gaps in the specification to be identified. Theorem provers may be employed to demonstrate that the software implementation meets its specification.",
isbn="978-3-319-64021-1",
doi="10.1007/978-3-319-64021-1_8",
url="https://doi.org/10.1007/978-3-319-64021-1_8"
}

@book{bowen1996formal,
  title={Formal specification and documentation using Z: A case study approach},
  author={Bowen, Jonathan Peter},
  volume={66},
  year={1996},
  publisher={International Thomson Computer Press London}
}

@article{bjorner1978vienna,
  title={The Vienna Development Method: The Meta-Language.},
  author={Bjorner, Dines and CB, JONES and others},
  year={1978}
}

@Inbook{Slaats1998,
author="Slaats, Noemie
and Van Assche, Bart
and Hoogewijs, Albert",
editor="Bicarregui, J. C.",
title="Shared Memory Synchronization",
bookTitle="Proof in VDM: Case Studies",
year="1998",
publisher="Springer London",
address="London",
pages="123--156",
abstract="Explicitly parallel programs consist of several threads, where each thread is executed by a different processing unit. These threads all have access to a shared memory, and communicate by writing to or reading from the shared memory. Reads and writes of different threads execute uncoordinatedly. Threads can wait for other threads by using synchronization. Although reading and writing the shared memory is similar in all shared memory systems, most shared memory systems have their own set of synchronization instructions. The semantics of the memory access and synchronization instructions together is called a memory model, which is usually specified informally or using a formalism specific to the memory model. We present a unified formalization of shared memory models both in traditional and in VDM notation. We also show how the Mural tool helps in writing the VDM specifications and in generating the corresponding formal theory. A proof constructed with Mural shows that even basic properties of this formal theory can be nontrivial to prove.",
isbn="978-1-4471-1532-8",
doi="10.1007/978-1-4471-1532-8_5",
url="https://doi.org/10.1007/978-1-4471-1532-8_5"
}

@article{jiryu2020extreme,
  title={eXtreme Modelling in Practice},
  author={Jiryu Davis, A Jesse and Hirschhorn, Max and Schvimer, Judah},
  journal={arXiv e-prints},
  pages={arXiv--2006},
  year={2020}
}

@book{snyder2011activemq,
  title={ActiveMQ in action},
  author={Snyder, Bruce and Bosnanac, Dejan and Davies, Rob},
  volume={47},
  year={2011},
  publisher={Manning Greenwich Conn.}
}

@article{spark2018apache,
  title={Apache spark},
  author={Spark, Apache},
  journal={Retrieved January},
  volume={17},
  pages={2018},
  year={2018}
}

@article{iqbal2015big,
  title={Big data analysis: Apache storm perspective},
  author={Iqbal, Muhammad Hussain and Soomro, Tariq Rahim},
  journal={International journal of computer trends and technology},
  volume={19},
  number={1},
  pages={9--14},
  year={2015}
}

@article{fraud,
  title={Building A Streaming Fraud Detection System With Kafka And Python},
  url={https://florimond.dev/blog/articles/2018/09/building-a-streaming-fraud-detection-system-with-kafka-and-python/},
  year={2018}
}

@article{iot,
  title={Internet of Things (IoT) and Event Streaming at Scale with Apache Kafka and MQTT},
  url={https://www.confluent.io/blog/iot-with-kafka-connect-mqtt-and-rest-proxy/},
  author={Kai Waehner},
  year={2019}
}

@article{tracking,
  title={Real-time activity tracking with Kafka},
  url={https://medium.com/@jchamath/real-time-activity-tracking-with-kafka-f07ce56da90e},
  author={Chamath Kirinde},
  year={2017}
}

@article{kern1999formal,
  title={Formal verification in hardware design: a survey},
  author={Kern, Christoph and Greenstreet, Mark R},
  journal={ACM Transactions on Design Automation of Electronic Systems (TODAES)},
  volume={4},
  number={2},
  pages={123--193},
  year={1999},
  publisher={ACM New York, NY, USA}
}

@article{houhou2017framework,
  title={Framework for Wireless Sensor Networks Code Generation from Formal Specification},
  author={Houhou, Sara and Kahloul, Laid and Benharzallah, Saber and Bettira, Roufaida},
  year={2017}
}

@book{utting2010practical,
  title={Practical model-based testing: a tools approach},
  author={Utting, Mark and Legeard, Bruno},
  year={2010},
  publisher={Elsevier}
}

@article{davis2020extreme,
  title={eXtreme Modelling in Practice},
  author={Davis, A and Schvimer, Judah and Hirschhorn, Max},
  journal={arXiv preprint arXiv:2006.00915},
  year={2020}
}

@article{metadata,
  title={Apache Kafka Needs No Keeper: Removing the Apache ZooKeeper Dependency},
  author={Colin Maccabe},
  year={2020},
  url={https://www.confluent.io/blog/removing-zookeeper-dependency-in-kafka/}
}

@book{junqueira2013zookeeper,
  title={ZooKeeper: distributed process coordination},
  author={Junqueira, Flavio and Reed, Benjamin},
  year={2013},
  publisher={" O'Reilly Media, Inc."}
}

@article{qourum,
  title={A Raft Protocol for the Metadata Quorum},
  author={Jason Gustafson},
  year={2020},
  url={https://cwiki.apache.org/confluence/display/KAFKA/KIP-595\%3A+A+Raft+Protocol+for+the+Metadata+Quorum}
}

@inproceedings{bravzenas2023tla+,
  title={TLA+ specifikacij{\k{u}} i{\v{s}}skyrimas i{\v{s}} Elixir programos},
  author={Bra{\v{z}}{\.e}nas, Deividas and Petrauskas, Karolis},
  booktitle={Proceedings of the Conference" Lithuanian MSc Research in Informatics and ICT"},
  pages={5--14},
  year={2023},
  organization={Vilniaus universiteto leidykla}
}

@book{juric2019elixir,
  title={Elixir in action},
  author={Juric, Sasa},
  year={2019},
  publisher={Simon and Schuster}
}



